{"version":3,"sources":["Components/Header.tsx","api.ts","utils.ts","Components/MovieSliderBox.tsx","Components/MovieSlider.tsx","Routes/Home.tsx","Routes/Search.tsx","Routes/TVShows.tsx","App.tsx","index.tsx","theme.ts"],"names":["Wrapper","styled","motion","div","Column","Logo","svg","props","theme","red","Items","ul","Item","li","Search","SearchSvg","SearchSvgAlone","SearchBox","form","SearchInput","input","NavigationCircle","span","logoVariants","initial","fillOpacity","hover","transition","repeat","Infinity","wrapperBackgroundVariants","top","background","scrolled","Header","matchesHome","useRouteMatch","isExact","matchesMovieId","matchesTVShows","useState","isSearching","setSearching","wrapperBackgroundAnimation","useAnimation","scrollY","useViewportScroll","useEffect","onChange","get","start","useForm","register","handleSubmit","history","useHistory","variants","animate","whileHover","xmlns","width","height","viewBox","path","color","d","to","layoutId","x","type","onClick","prev","fillRule","clipRule","onSubmit","formData","push","keyword","scaleX","required","minLength","placeholder","SearchResultMediaType","TMDB_BASE_URL","TMDB_API_KEY","fetchMoviesNowPlaying","fetch","then","res","json","fetchMoviesLatest","fetchMoviesTopRated","fetchMoviesUpcoming","fetchTVShowsAiringToday","fetchTVShowsLatest","fetchTVShowsPopular","fetchTVShowsTopRated","makeMovieImageUrl","fileNameWithExtension","Box","backgroundImageUrl","BoxDescription","black","lighter","white","darker","boxVariants","scale","y","zIndex","delay","duration","boxDescriptionVariants","opacity","MovieSliderBox","movie","id","backdrop_path","title","name","MovieSlider","pageOffset","movies","onClickMovie","sliderIndex","setSliderIndex","isExitingSlide","setExitingSlide","movesForward","setMovingForward","moviesOnSlide","slice","Slider","SliderTitle","AnimatePresence","onExitComplete","Row","offset","rowVariants","exit","map","Prev","maxIndex","Math","ceil","length","Next","window","innerWidth","h2","Navigator","outerWidth","sliderOffset","floor","Loader","Banner","Title","Overview","p","Overlay","MovieDetailModal","MovieCover","MovieDetailContainer","MovieTitle","h3","MovieOverview","SliderWrapper","Home","matchedMovieId","params","movieId","useQuery","moviesNowPlaying","data","isLoadingMoviesNowPlaying","isLoading","moviesLatest","isLoadingMoviesLatest","moviesTopRated","isLoadingMoviesTopRated","moviesUpcoming","isLoadingMoviesUpcoming","results","movieOfBanner","moviesOfSlider","handleClickMovie","clickedMovie","find","style","position","backgroundColor","overview","location","useLocation","URLSearchParams","search","fetchSearchResults","searchResults","filter","r","media_type","MOVIE","tvShows","TV","tvShowId","TVShows","matchesTVShowId","matchedTVShowId","tvShowsAiringToday","isLoadingTVShowsAiringToday","tvShowsLatest","isLoadingTVShowsLatest","tvShowsPopular","isLoadingTVShowsPopular","tvShowsTopRated","isLoadingTVShowsTopRated","tvShowOfBanner","tvShowsOfSlider","handleClickTVShow","clickedTVShow","tvShow","console","log","App","GlobalStyle","createGlobalStyle","client","QueryClient","ReactDOM","render","StrictMode","veryDark","document","getElementById"],"mappings":"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","file":"static/js/main.b267364f.chunk.js","sourcesContent":["import {\n  motion,\n  useAnimation,\n  useViewportScroll,\n  Variants,\n} from 'framer-motion';\nimport { useEffect, useState } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { Link, useHistory, useRouteMatch } from 'react-router-dom';\nimport styled from 'styled-components';\n\nconst Wrapper = styled(motion.div)`\n  width: 100%;\n  height: 100px;\n  position: fixed;\n  top: 0;\n  background-color: rgba(0, 0, 0, 0.2);\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  align-items: center;\n  padding: 20px;\n  z-index: 100;\n`;\n\nconst Column = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n`;\n\nconst Logo = styled(motion.svg)`\n  width: 100px;\n  height: 50px;\n  margin-right: 50px;\n  fill: ${(props) => props.theme.red};\n`;\n\nconst Items = styled.ul`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n`;\n\nconst Item = styled.li`\n  color: rgba(255, 255, 255, 1);\n  margin-right: 20px;\n  position: relative;\n`;\n\nconst Search = styled(motion.div)`\n  display: flex;\n  align-items: center;\n  position: relative;\n  color: rgba(255, 255, 255, 1);\n  svg {\n    height: 25px;\n  }\n`;\n\nconst SearchSvg = styled(motion.svg)`\n  width: 18px;\n  height: 18px;\n  fill: rgba(255, 255, 255, 1);\n  position: relative;\n`;\n\nconst SearchSvgAlone = styled(SearchSvg)`\n  position: absolute;\n  right: 0;\n`;\n\nconst SearchBox = styled(motion.form)`\n  display: flex;\n  justify-content: flex-end;\n  align-items: center;\n  width: 210px;\n  height: 32px;\n  border: 2px solid rgba(255, 255, 255, 0.7);\n  border-radius: 5px;\n  transform-origin: center right;\n`;\n\nconst SearchInput = styled(motion.input)`\n  width: 180px;\n  height: 24px;\n  border: none;\n  background-color: transparent;\n  transform-origin: center right;\n  color: rgba(255, 255, 255, 0.7);\n  ::placeholder {\n    color: rgba(255, 255, 255, 0.4);\n  }\n`;\n\nconst NavigationCircle = styled(motion.span)`\n  // shape\n  width: 8px;\n  height: 8px;\n  border-radius: 4px;\n  background-color: ${(props) => props.theme.red};\n  // position\n  position: absolute;\n  left: 0;\n  right: 0;\n  margin: 0 auto;\n  bottom: -12px;\n`;\n\nconst logoVariants: Variants = {\n  initial: { fillOpacity: 1 },\n  hover: { fillOpacity: [0, 1, 0], transition: { repeat: Infinity } },\n};\n\nconst wrapperBackgroundVariants: Variants = {\n  top: { background: 'rgba(0,0,0,0)' },\n  scrolled: { background: 'rgba(0,0,0,1)' },\n};\n\ninterface IForm {\n  keyword: string;\n}\n\nexport default function Header() {\n  const matchesHome = useRouteMatch('/')?.isExact;\n  const matchesMovieId = useRouteMatch('/movie/:movieId');\n  const matchesTVShows = useRouteMatch('/tv_show');\n\n  const [isSearching, setSearching] = useState(false);\n  const toggleSearching = () => setSearching((prev) => !prev);\n\n  const wrapperBackgroundAnimation = useAnimation();\n  const { scrollY } = useViewportScroll();\n  useEffect(() => {\n    scrollY.onChange(() => {\n      if (scrollY.get() > 80) wrapperBackgroundAnimation.start('scrolled');\n      else wrapperBackgroundAnimation.start('top');\n    });\n  }, [scrollY]);\n\n  const { register, handleSubmit } = useForm<IForm>();\n  const history = useHistory();\n  const handleValid = (formData: IForm) => {\n    history.push(`/search?keyword=${formData.keyword}`);\n  };\n\n  return (\n    <Wrapper\n      variants={wrapperBackgroundVariants}\n      initial={{ background: 'rgba(0,0,0,0)' }}\n      animate={wrapperBackgroundAnimation}\n    >\n      <Column>\n        <Logo\n          variants={logoVariants}\n          initial=\"initial\"\n          whileHover=\"hover\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n          width=\"1024\"\n          height=\"276.742\"\n          viewBox=\"0 0 1024 276.742\"\n        >\n          <motion.path\n            color=\"\"\n            d=\"M140.803 258.904c-15.404 2.705-31.079 3.516-47.294\n              5.676l-49.458-144.856v151.073c-15.404 1.621-29.457 3.783-44.051\n              5.945v-276.742h41.08l56.212\n              157.021v-157.021h43.511v258.904zm85.131-157.558c16.757 0 42.431-.811\n              57.835-.811v43.24c-19.189 0-41.619 0-57.835.811v64.322c25.405-1.621\n              50.809-3.785 76.482-4.596v41.617l-119.724\n              9.461v-255.39h119.724v43.241h-76.482v58.105zm237.284-58.104h-44.862v198.908c-14.594\n              0-29.188 0-43.239.539v-199.447h-44.862v-43.242h132.965l-.002\n              43.242zm70.266\n              55.132h59.187v43.24h-59.187v98.104h-42.433v-239.718h120.808v43.241h-78.375v55.133zm148.641\n              103.507c24.594.539 49.456 2.434 73.51\n              3.783v42.701c-38.646-2.434-77.293-4.863-116.75-5.676v-242.689h43.24v201.881zm109.994\n              49.457c13.783.812 28.377 1.623 42.43\n              3.242v-254.58h-42.43v251.338zm231.881-251.338l-54.863 131.615 54.863\n              145.127c-16.217-2.162-32.432-5.135-48.648-7.838l-31.078-79.994-31.617\n              73.51c-15.678-2.705-30.812-3.516-46.484-5.678l55.672-126.75-50.269-129.992h46.482l28.377\n              72.699 30.27-72.699h47.295z\"\n          />\n        </Logo>\n        <Items>\n          <Item>\n            <Link to=\"/\">Home</Link>\n            {matchesHome || matchesMovieId ? (\n              <NavigationCircle layoutId=\"navigationCircle\" />\n            ) : null}\n          </Item>\n          <Item>\n            <Link to=\"/tv_show\">TV Show</Link>\n            {matchesTVShows ? (\n              <NavigationCircle layoutId=\"navigationCircle\" />\n            ) : null}\n          </Item>\n        </Items>\n      </Column>\n      <Column>\n        <Search>\n          <SearchSvgAlone\n            animate={{ x: isSearching ? -185 : 0 }}\n            transition={{ type: 'tween' }}\n            onClick={toggleSearching}\n            viewBox=\"0 0 20 20\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n          >\n            <motion.path\n              fillRule=\"evenodd\"\n              d=\"M8 4a4 4 0 100 8 4 4 0 000-8zM2 8a6 6 0 1110.89 3.476l4.817\n                4.817a1 1 0 01-1.414 1.414l-4.816-4.816A6 6 0 012 8z\"\n              clipRule=\"evenodd\"\n            ></motion.path>\n          </SearchSvgAlone>\n          <SearchBox\n            onSubmit={handleSubmit(handleValid)}\n            animate={{ scaleX: isSearching ? 1 : 0 }}\n            transition={{ type: 'tween' }}\n            initial={false}\n          >\n            <SearchInput\n              {...register('keyword', { required: true, minLength: 3 })}\n              type=\"text\"\n              placeholder=\"Search...\"\n            />\n          </SearchBox>\n        </Search>\n      </Column>\n    </Wrapper>\n  );\n}\n","const TMDB_BASE_URL = 'https://api.themoviedb.org/3';\nconst TMDB_API_KEY = 'e39a8d93726f02bc3d5a6e1542f7a2f9';\n\nexport interface IMovie {\n  adult: boolean;\n  backdrop_path: string; // \"/eENEf62tMXbhyVvdcXlnQz2wcuT.jpg\"\n  genre_ids: number[]; // [878, 28, 12]\n  id: number; // 580489\n  original_language: string; // \"en\"\n  original_title: string; // \"Venom: Let There Be Carnage\"\n  overview: string; // \"연쇄살인마 클리터스 캐서디(우디 해럴슨)가 사형선고를 받는다. 죽을 생각이 전혀 없는 클리터스는 자신의 집행일을 연기할 목적으로 마지막 증언을 남기겠다며 탐사보도로 유명한 프리랜스 저널리스트 에디를 지목한다. 베놈을 얻는 대신 직장과 연인을 모두 잃고 폐인처럼 생활하던 에디는 클리터스와의 단독 인터뷰를 통해 다시 한번 저널리스트로서 재기할 수 있는 기회를 얻는다. 클리터스가 던져주는 수많은 단서로 인해 미결로 남아 있던 살인사건을 추가로 밝히는 데 성공한 에디는 제일 먼저 앤에게 달려가지만 전편에서 에디의 몸에 베놈이 산다는 것을 알게 된 그녀는 새로운 연인 댄 박사(레이드 스콧)와 결혼을 선언한다. 평정심을 잃은 에디는 클리터스와의 인터뷰 중 실수로 클리터스가 새로운 빌런 카니지로 거듭나는 빌미를 제공하고 마는데...\"\n  popularity: number; // 9995.218\n  poster_path: string; // \"/1Lh9LER4xRQ3INFFi2dfS2hpRwv.jpg\"\n  release_date: string; // \"2021-09-30\"\n  title: string; // \"베놈 2: 렛 데어 비 카니지\"\n  video: boolean; // false\n  vote_average: number; // 7.2\n  vote_count: number; // 4635\n}\nexport interface IMovies {\n  dates: {\n    maximum: string;\n    minimum: string;\n  };\n  page: number;\n  results: IMovie[];\n  total_pages: number;\n  total_results: number;\n}\n\nexport function fetchMoviesNowPlaying(): Promise<IMovies> {\n  return fetch(\n    `${TMDB_BASE_URL}/movie/now_playing?api_key=${TMDB_API_KEY}&language=ko-KR&page=1`\n  ).then((res) => res.json());\n}\n\nexport function fetchMoviesLatest(): Promise<IMovies> {\n  return fetch(\n    `${TMDB_BASE_URL}/movie/latest?api_key=${TMDB_API_KEY}&language=ko-KR`\n  ).then((res) => res.json());\n}\n\nexport function fetchMoviesTopRated(): Promise<IMovies> {\n  return fetch(\n    `${TMDB_BASE_URL}/movie/top_rated?api_key=${TMDB_API_KEY}&language=ko-KR&page=1`\n  ).then((res) => res.json());\n}\n\nexport function fetchMoviesUpcoming(): Promise<IMovies> {\n  return fetch(\n    `${TMDB_BASE_URL}/movie/upcoming?api_key=${TMDB_API_KEY}&language=ko-KR&page=1`\n  ).then((res) => res.json());\n}\n\nexport interface ITVShows {\n  page: number; // 1\n  results: ITVShow[]; // (20) [{…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}]\n  total_pages: number; // 39\n  total_results: number; // 768\n}\nexport interface ITVShow {\n  backdrop_path: string; // \"/1R68vl3d5s86JsS2NPjl8UoMqIS.jpg\"\n  first_air_date: string; //j \"2021-11-24\"\n  genre_ids: number[]; // [10759, 18]\n  id: number; // 88329\n  name: string; // \"Hawkeye\"\n  origin_country: string[]; // ['US']\n  original_language: string; // \"en\"\n  original_name: string; //\"Hawkeye\"\n  overview: string; //\"Former Avenger Clint Barton has a seemingly simple mission: get back to his family for Christmas. Possible? Maybe with the help of Kate Bishop, a 22-year-old archer with dreams of becoming a superhero. The two are forced to work together when a presence from Barton’s past threatens to derail far more than the festive spirit.\"\n  popularity: number; //3243.761\n  poster_path: string; //\"/pqzjCxPVc9TkVgGRWeAoMmyqkZV.jpg\"\n  vote_average: number; //8.5\n  vote_count: number; // 912\n}\n\nexport function fetchTVShowsAiringToday(): Promise<ITVShows> {\n  return fetch(\n    `${TMDB_BASE_URL}/tv/airing_today?api_key=${TMDB_API_KEY}&language=ko-KR&page=1`\n  ).then((res) => res.json());\n}\n\nexport function fetchTVShowsLatest(): Promise<ITVShows> {\n  return fetch(\n    `${TMDB_BASE_URL}/tv/latest?api_key=${TMDB_API_KEY}&language=ko-KR`\n  ).then((res) => res.json());\n}\n\nexport function fetchTVShowsPopular(): Promise<ITVShows> {\n  return fetch(\n    `${TMDB_BASE_URL}/tv/popular?api_key=${TMDB_API_KEY}&language=ko-KR&page=1`\n  ).then((res) => res.json());\n}\n\nexport function fetchTVShowsTopRated(): Promise<ITVShows> {\n  return fetch(\n    `${TMDB_BASE_URL}/tv/top_rated?api_key=${TMDB_API_KEY}&language=ko-KR&page=1`\n  ).then((res) => res.json());\n}\n\nexport interface ISearchResults {\n  page: number;\n  results: ISearchResult[];\n  total_pages: number; // 34,\n  total_results: number; // 662\n}\n\nexport enum SearchResultMediaType {\n  MOVIE = 'movie',\n  TV = 'tv',\n  PERSON = 'person',\n}\n\nexport interface ISearchResult {\n  adult: boolean; // false,\n  backdrop_path: string; // \"/jtVl3nN5bJ4t7pgakLfGJmOrqZm.jpg\",\n  genre_ids: number[]; // [878, 12]\n  id: number; // 438631,\n  media_type: 'movie' | 'tv' | 'person';\n  original_language: string; // \"en\",\n  original_title: string; // \"Dune\",\n  overview: string; //  \"10191년, 아트레이데스 가문의 후계자인 폴은 시간과 공간을 초월해 과거와 미래를 모두 볼 수 있고, 더 나은 미래를 만들 유일한 구원자인 예지된 자의 운명을 타고났다. 그리고 어떤 계시처럼 매일 꿈에서 아라키스의 행성에 있는 한 여인을 만난다. 귀족들이 지지하는 아트레이데스 가문에 대한 황제의 질투는 폴과 그 일족들을 죽음이 기다리는 아라키스로 이끄는데...\",\n  popularity: number; // 1162.646,\n  poster_path: string; // \"/Dtwad1HQv3jc2f54QQQHJ1VZ1W.jpg\",\n  release_date: string; // \"2021-09-15\",\n  title: string; // \"듄\",\n  video: boolean; // false,\n  vote_average: number; // 7.9,\n  vote_count: number; // 4837\n}\n\nexport function fetchSearchResults(keyword: string): Promise<ISearchResults> {\n  return fetch(\n    `${TMDB_BASE_URL}/search/multi?api_key=${TMDB_API_KEY}&language=ko-KR&query=${keyword}&page=1&include_adult=false`\n  ).then((res) => res.json());\n}\n\nexport interface IMovieDetail {\n  adult: boolean; // false\n  backdrop_path: string; // '/kOJHfBhGCeBjLjAWw2SHLAztlmf.jpg';\n  belongs_to_collection: null;\n  budget: number; // 2540800;\n  genres: {\n    id: number; // 35;\n    name: string; // '코미디';\n  }[];\n  homepage: string; // '';\n  id: number; // 872;\n  imdb_id: string; //  'tt0045152';\n  original_language: string; //  'en';\n  original_title: string; //  \"Singin' in the Rain\";\n  overview: string; //  '아마츄어 쇼 코미디언인 돈 록우드(진 켈리)와 코스모(도날드 오코너)는 공연을 하며 이곳저곳을 떠돌아다니다 뜻대로 되지않자 새 일자리를 얻기위해 헐리우드로 온다. 그런데 우연찮게 돈 록우드는 마뉴멘탈 영화사의 스턴트맨 역을 따내게 되고, 당시 최고의 인기를 누리고 있던 여배우인 리나 레이먼트(쟌 하겐)와 함께 다수의 영화에 출연함으로써 단연 스타로 급부상하게 된다. 그러나 화려한 영광도 잠시, 헐리웃 영화계가 무성영화에서 유성영화 체제로 전환됨으로써 목소리 연기가 너무나 형편없는 리나 레이먼트 때문에 영화를 완전히 망치게 되는데...';\n  popularity: number; // 21.203;\n  poster_path: string; // '/w03EiJVHP8Un77boQeE7hg9DVdU.jpg';\n  production_companies: {\n    id: number; // 21;\n    logo_path: string; //  '/aOWKh4gkNrfFZ3Ep7n0ckPhoGb5.png';\n    name: string; //  'Metro-Goldwyn-Mayer';\n    origin_country: string; // 'US';\n  }[];\n  production_countries: {\n    iso_3166_1: string; //  'US';\n    name: string; //  'United States of America';\n  }[];\n  release_date: string; //  '1952-04-09';\n  revenue: number; // 7200000;\n  runtime: number; // 102;\n  spoken_languages: {\n    english_name: string; //  'English';\n    iso_639_1: string; //  'en';\n    name: string; //  'English';\n  }[];\n  status: string; //  'Released';\n  tagline: string; //  '영화 역사상 가장 유쾌하고 사랑스러운 뮤지컬 영화';\n  title: string; //  '사랑은 비를 타고';\n  video: boolean; // false;\n  vote_average: number; // 8.2;\n  vote_count: number; // 2286;\n}\n\nexport function fetchMovieDetail(movieId: string): Promise<IMovieDetail> {\n  return fetch(\n    `${TMDB_BASE_URL}/movie/${movieId}?api_key=${TMDB_API_KEY}&language=ko-KR`\n  ).then((res) => res.json());\n}\n\nexport interface ITVShowDetail {\n  backdrop_path: string; // '/36bfPmS0daIxWmFq4amefos5GeP.jpg';\n  created_by: {\n    id: number; // 3353842;\n    credit_id: string; // '61c0db8ba84ff7004180721a';\n    name: string; // 'Kreetta Onkeli';\n    gender: number; // 0;\n    profile_path: null;\n  }[];\n  episode_run_time: number[]; // [];\n  first_air_date: string; // '2006-10-16';\n  genres: {\n    id: number; // 18;\n    name: string; // '드라마';\n  }[];\n  homepage: string; // '';\n  id: number; // 153854;\n  in_production: boolean; // true;\n  languages: string[]; // ['fi'];\n  last_air_date: string; // '2006-10-30';\n  last_episode_to_air: {\n    air_date: string; // '2006-10-30';\n    episode_number: number; // 3;\n    id: number; // 3401428;\n    name: string; // '';\n    overview: string; // '';\n    production_code: string; // '';\n    season_number: number; // 1;\n    still_path: string; // '/qc2qqVDFTmFFS1aqKq2JEne90SW.jpg';\n    vote_average: number; // 0;\n    vote_count: number; // 0;\n  };\n  name: string; // 'Ilonen talo';\n  next_episode_to_air: null;\n  networks: {\n    name: string; // 'Yle Areena';\n    id: number; // 2594;\n    logo_path: string; // '/vxp8LTTXwGFrzNM7zSgzl4DfSad.png';\n    origin_country: string; // 'FI';\n  }[];\n  number_of_episodes: number; // 3;\n  number_of_seasons: number; // 1;\n  origin_country: string[]; // ['FI'];\n  original_language: string; // 'fi';\n  original_name: string; // 'Ilonen talo';\n  overview: string; // '';\n  popularity: number; // 0;\n  poster_path: string; // '/dPDruOyrLgcDe9A20yUhF8nir2w.jpg';\n  production_companies: {\n    id: number; // 440;\n    logo_path: string; // '/z10otS2BrUXXlIH5zGBP5dnhTPe.png';\n    name: string; // 'Kinoproduction';\n    origin_country: string; // 'FI';\n  }[];\n  production_countries: any[]; // [];\n  seasons: {\n    air_date: string; // '2006-10-16';\n    episode_count: number; // 3;\n    id: number; // 236623;\n    name: string; // '시즌 1';\n    overview: string; // '';\n    poster_path: string; // '/dPDruOyrLgcDe9A20yUhF8nir2w.jpg';\n    season_number: number; // 1;\n  }[];\n  spoken_languages: {\n    english_name: string; // 'Finnish';\n    iso_639_1: string; // 'fi';\n    name: string; // 'suomi';\n  }[];\n  status: string; // 'Returning Series';\n  tagline: string; // '';\n  type: string; // 'Scripted';\n  vote_average: number; // 0;\n  vote_count: number; // 0;\n}\n\nexport function fetchTVShowDetail(tvShowId: string): Promise<ITVShowDetail> {\n  return fetch(\n    `${TMDB_BASE_URL}/tv/${tvShowId}?api_key=${TMDB_API_KEY}&language=ko-KR`\n  ).then((res) => res.json());\n}\n","export function makeMovieImageUrl(\n  fileNameWithExtension: string,\n  width?: number\n) {\n  return `https://image.tmdb.org/t/p/${\n    width ? 'w' + width : 'original'\n  }/${fileNameWithExtension}`;\n}\n","import { motion, Variants } from 'framer-motion';\nimport styled from 'styled-components';\nimport { makeMovieImageUrl } from '../utils';\nimport { IMovie, ITVShow } from '../api';\n\n/* styled components */\nconst Box = styled(motion.div)<{ backgroundImageUrl: string }>`\n  aspect-ratio: 1.58;\n  position: relative;\n  flex: 1;\n  &:first-child {\n    transform-origin: center left;\n  }\n  &:last-child {\n    transform-origin: center right;\n  }\n  background-size: cover;\n  background-image: url(${(props) => props.backgroundImageUrl});\n`;\n\nconst BoxDescription = styled(motion.div)`\n  height: 50px;\n  background-color: ${(props) => props.theme.black.lighter};\n  opacity: 0;\n  position: absolute;\n  width: 100%;\n  bottom: 0;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  h4 {\n    text-align: center;\n    color: ${(props) => props.theme.white.darker};\n  }\n`;\n\n/* variants */\nconst boxVariants: Variants = {\n  initial: { scale: 1, y: 0 },\n  hover: {\n    scale: 1.2,\n    y: -80,\n    zIndex: 99,\n    transition: { delay: 0.3, duration: 0.3 },\n  },\n};\n\nconst boxDescriptionVariants: Variants = {\n  hover: { opacity: 1, transition: { delay: 0.3, duration: 0.3 } },\n};\n\ninterface IMovieSliderBoxProps {\n  movie: IMovie | ITVShow;\n  onClick: Function;\n}\n\nexport default function MovieSliderBox({\n  movie,\n  onClick,\n}: IMovieSliderBoxProps) {\n  return (\n    <Box\n      key={movie.id}\n      layoutId={'' + movie.id}\n      onClick={() => onClick(movie.id)}\n      backgroundImageUrl={makeMovieImageUrl(movie.backdrop_path, 300)}\n      variants={boxVariants}\n      initial=\"initial\"\n      whileHover=\"hover\"\n      transition={{ type: 'tween' }}\n    >\n      <BoxDescription\n        variants={boxDescriptionVariants}\n        transition={{ type: 'tween' }}\n      >\n        {/* @ts-ignore */}\n        <h4>{movie.title || movie.name}</h4>\n      </BoxDescription>\n    </Box>\n  );\n}\n","import { AnimatePresence, motion, Variants } from 'framer-motion';\nimport { useState } from 'react';\nimport styled from 'styled-components';\nimport { IMovie, ITVShow } from '../api';\nimport MovieSliderBox from './MovieSliderBox';\n\ninterface IMovieSliderProps {\n  title: string;\n  pageOffset: number;\n  movies: IMovie[] | ITVShow[];\n  onClickMovie: (movieId: number) => void;\n}\n\nexport default function MovieSlider({\n  title,\n  pageOffset,\n  movies,\n  onClickMovie,\n}: IMovieSliderProps) {\n  const [sliderIndex, setSliderIndex] = useState(0);\n  const [isExitingSlide, setExitingSlide] = useState(false);\n  const [movesForward, setMovingForward] = useState(true);\n\n  const showNextSlide = () => {\n    if (isExitingSlide) return; // Disable while slide animtion playing\n    const maxIndex = Math.ceil(movies.length / pageOffset) - 1;\n    setExitingSlide(true);\n    setMovingForward(true);\n    setSliderIndex((prev) => (prev === maxIndex ? 0 : prev + 1));\n  };\n\n  const showPrevSlide = () => {\n    if (isExitingSlide) return; // Disable while slide animtion playing\n    const maxIndex = Math.ceil(movies.length / pageOffset) - 1;\n    setExitingSlide(true);\n    setMovingForward(false);\n    setSliderIndex((prev) => (prev === 0 ? maxIndex : prev - 1));\n  };\n\n  const handleExitComplete = () => setExitingSlide(false);\n\n  const moviesOnSlide = movies.slice(\n    pageOffset * sliderIndex,\n    pageOffset * (sliderIndex + 1)\n  );\n\n  return (\n    <Slider pageOffset={pageOffset}>\n      <SliderTitle>{title}</SliderTitle>\n      <AnimatePresence initial={false} onExitComplete={handleExitComplete}>\n        <Row\n          key={sliderIndex}\n          offset={pageOffset}\n          variants={rowVariants}\n          initial={movesForward ? 'initial' : 'exit'}\n          animate=\"animate\"\n          transition={{ type: 'tween', duration: 0.5 }}\n          exit={movesForward ? 'exit' : 'initial'}\n        >\n          {moviesOnSlide.map((movie) => (\n            <MovieSliderBox\n              key={movie.id}\n              movie={movie}\n              onClick={onClickMovie}\n            />\n          ))}\n        </Row>\n      </AnimatePresence>\n      <Prev onClick={showPrevSlide} pageOffset={pageOffset}>\n        <span>{'<'}</span>\n      </Prev>\n      <Next onClick={showNextSlide} pageOffset={pageOffset}>\n        <span>{'>'}</span>\n      </Next>\n    </Slider>\n  );\n}\n\n// styled components\nconst Slider = styled.div<{ pageOffset: number }>`\n  position: relative;\n  height: ${(props) => 44 + window.innerWidth / props.pageOffset / 1.58}px;\n  margin-bottom: 20px;\n`;\n\nconst Row = styled(motion.div)<{ offset: number }>`\n  position: absolute;\n  display: grid;\n  width: 100%;\n  gap: 10px;\n  grid-template-columns: repeat(${(props) => props.offset}, 1fr);\n`;\n\nconst SliderTitle = styled.h2`\n  font-size: 24px;\n  padding: 10px;\n  color: ${(props) => props.theme.white.darker};\n`;\n\nconst Navigator = styled.div<{ pageOffset: number }>`\n  position: absolute;\n  top: 44px;\n  width: 60px;\n  height: ${(props) => window.innerWidth / props.pageOffset / 1.58}px;\n  background-color: rgba(0, 0, 0, 1);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  opacity: 0.8;\n  span {\n    color: ${(props) => props.theme.white.darker};\n    font-size: 40px;\n  }\n`;\n\nconst Next = styled(Navigator)`\n  right: 0;\n`;\n\nconst Prev = styled(Navigator)`\n  left: 0;\n`;\n\n// variants\nconst rowVariants: Variants = {\n  initial: { x: window.outerWidth + 10 },\n  animate: { x: 0 },\n  exit: { x: -window.outerWidth - 10 },\n};\n","import { AnimatePresence, motion, useViewportScroll } from 'framer-motion';\nimport { useQuery } from 'react-query';\nimport { useHistory, useRouteMatch } from 'react-router-dom';\nimport styled from 'styled-components';\nimport {\n  fetchMoviesLatest,\n  fetchMoviesNowPlaying,\n  fetchMoviesTopRated,\n  fetchMoviesUpcoming,\n  IMovies,\n} from '../api';\nimport MovieSlider from '../Components/MovieSlider';\nimport { makeMovieImageUrl } from '../utils';\n\nconst sliderOffset = Math.floor(window.innerWidth / 300);\n\n/* styled components */\nconst Wrapper = styled.div`\n  width: 100vw;\n  height: 200vh;\n  background: linear-gradient(135deg, cyan, lightgreen);\n`;\n\nconst Loader = styled.div``;\nconst Banner = styled.div<{ fileNameWithExtension: string }>`\n  height: 100vh;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  background-image: linear-gradient(rgba(0, 0, 0, 0), rgba(0, 0, 0, 1)),\n    url(${(props) => makeMovieImageUrl(props.fileNameWithExtension)});\n  background-size: cover;\n  padding: 40px;\n`;\n\nconst Title = styled.h2`\n  font-size: 58px;\n  margin-bottom: 10px;\n  font-weight: bold;\n`;\n\nconst Overview = styled.p`\n  font-size: 18px;\n  width: 70%;\n`;\n\nconst Overlay = styled(motion.div)`\n  position: fixed;\n  top: 0;\n  width: 100%;\n  height: 100%;\n  background-color: rgba(0, 0, 0, 0.7);\n  opacity: 0;\n`;\n\nconst MovieDetailModal = styled(motion.div)`\n  position: absolute;\n  left: 0;\n  right: 0;\n  margin: 0 auto;\n  min-width: 800px;\n  width: 40vw;\n  height: 70vh;\n  background-color: rgba(0, 0, 0, 1);\n  z-index: 101;\n`;\n\nconst MovieCover = styled.div<{ backgroundImageUrl: string }>`\n  width: 100%;\n  height: 50vh;\n  background-image: linear-gradient(rgba(0, 0, 0, 0), rgba(0, 0, 0, 1)),\n    url(${(props) => props.backgroundImageUrl});\n  background-size: cover;\n  background-position: center center;\n  border-radius: 20px;\n  overflow: hidden;\n`;\n\nconst MovieDetailContainer = styled.div`\n  position: relative;\n  top: -100px;\n  padding: 20px;\n`;\n\nconst MovieTitle = styled.h3`\n  font-size: 60px;\n  margin-bottom: 10px;\n`;\n\nconst MovieOverview = styled.p`\n  line-height: 1.5;\n  color: ${(props) => props.theme.white.darker};\n`;\n\nconst SliderWrapper = styled.div`\n  position: absolute;\n  width: 100%;\n  height: 100vh;\n  bottom: 200px;\n`;\n\nexport default function Home() {\n  const history = useHistory();\n  const matchesMovieId = useRouteMatch<{ movieId: string }>('/movie/:movieId');\n  const matchedMovieId = matchesMovieId?.params.movieId;\n\n  const { data: moviesNowPlaying, isLoading: isLoadingMoviesNowPlaying } =\n    useQuery<IMovies>(['movie', 'now_playing'], fetchMoviesNowPlaying);\n  const { data: moviesLatest, isLoading: isLoadingMoviesLatest } =\n    useQuery<IMovies>(['movie', 'latest'], fetchMoviesLatest);\n  const { data: moviesTopRated, isLoading: isLoadingMoviesTopRated } =\n    useQuery<IMovies>(['movie', 'top_rated'], fetchMoviesTopRated);\n  const { data: moviesUpcoming, isLoading: isLoadingMoviesUpcoming } =\n    useQuery<IMovies>(['movie', 'upcoming'], fetchMoviesUpcoming);\n  const [movieOfBanner, ...moviesOfSlider] = moviesNowPlaying?.results ?? [];\n\n  const isLoading =\n    isLoadingMoviesNowPlaying ||\n    isLoadingMoviesLatest ||\n    isLoadingMoviesTopRated ||\n    isLoadingMoviesUpcoming;\n\n  const handleClickMovie = (movieId: number) => {\n    history.push(`/movie/${movieId}`);\n  };\n\n  const { scrollY } = useViewportScroll();\n  const handleClickOverlay = () => history.push('/');\n\n  const clickedMovie =\n    matchedMovieId &&\n    moviesOfSlider.find((movie) => movie.id === +matchedMovieId);\n\n  return (\n    <Wrapper>\n      {isLoading ? (\n        <Loader></Loader>\n      ) : (\n        <div\n          style={{\n            position: 'relative',\n            backgroundColor: 'rgba(0,0,0,1)',\n            width: '100%',\n            height: '100%',\n          }}\n        >\n          <Banner fileNameWithExtension={movieOfBanner?.backdrop_path ?? ''}>\n            <Title>{movieOfBanner?.title ?? ''}</Title>\n            <Overview>{movieOfBanner?.overview ?? ''}</Overview>\n          </Banner>\n          <SliderWrapper>\n            <MovieSlider\n              title={'NOW PLAYING'}\n              movies={moviesOfSlider}\n              pageOffset={sliderOffset}\n              onClickMovie={handleClickMovie}\n            />\n            <MovieSlider\n              title={'LATEST'}\n              movies={moviesLatest!.results ?? []}\n              pageOffset={sliderOffset}\n              onClickMovie={handleClickMovie}\n            />\n            <MovieSlider\n              title={'TOP RATED'}\n              movies={moviesTopRated!.results ?? []}\n              pageOffset={sliderOffset}\n              onClickMovie={handleClickMovie}\n            />\n            <MovieSlider\n              title={'UPCOMING'}\n              movies={moviesUpcoming!.results ?? []}\n              pageOffset={sliderOffset}\n              onClickMovie={handleClickMovie}\n            />\n          </SliderWrapper>\n          <AnimatePresence>\n            {matchesMovieId ? (\n              <>\n                <Overlay\n                  onClick={handleClickOverlay}\n                  animate={{ opacity: 1 }}\n                  exit={{ opacity: 0 }}\n                />\n                <MovieDetailModal\n                  style={{ top: scrollY.get() + 100 }}\n                  layoutId={matchesMovieId?.params.movieId}\n                >\n                  {clickedMovie ? (\n                    <>\n                      <MovieCover\n                        backgroundImageUrl={makeMovieImageUrl(\n                          clickedMovie.backdrop_path,\n                          500\n                        )}\n                      />\n                      <MovieDetailContainer>\n                        <MovieTitle>{clickedMovie.title}</MovieTitle>\n                        <MovieOverview>{clickedMovie.overview}</MovieOverview>\n                      </MovieDetailContainer>\n                    </>\n                  ) : null}\n                </MovieDetailModal>\n              </>\n            ) : null}\n          </AnimatePresence>\n        </div>\n      )}\n    </Wrapper>\n  );\n}\n","import { motion, useViewportScroll } from 'framer-motion';\nimport { useQuery } from 'react-query';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport styled from 'styled-components';\nimport {\n  fetchSearchResults,\n  IMovie,\n  ISearchResults,\n  ITVShow,\n  SearchResultMediaType,\n} from '../api';\nimport MovieSlider from '../Components/MovieSlider';\nimport { makeMovieImageUrl } from '../utils';\n\nconst sliderOffset = Math.floor(window.innerWidth / 300);\n\n/* styled components */\nconst Wrapper = styled.div`\n  width: 100vw;\n  height: 200vh;\n  background: linear-gradient(135deg, cyan, lightgreen);\n`;\n\nconst Loader = styled.div``;\nconst Banner = styled.div<{ fileNameWithExtension: string }>`\n  height: 100vh;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  background-image: linear-gradient(rgba(0, 0, 0, 0), rgba(0, 0, 0, 1)),\n    url(${(props) => makeMovieImageUrl(props.fileNameWithExtension)});\n  background-size: cover;\n  padding: 40px;\n`;\n\nconst Title = styled.h2`\n  font-size: 58px;\n  margin-bottom: 10px;\n  font-weight: bold;\n`;\n\nconst Overview = styled.p`\n  font-size: 18px;\n  width: 70%;\n`;\n\nconst Overlay = styled(motion.div)`\n  position: fixed;\n  top: 0;\n  width: 100%;\n  height: 100%;\n  background-color: rgba(0, 0, 0, 0.7);\n  opacity: 0;\n`;\n\nconst MovieDetailModal = styled(motion.div)`\n  position: absolute;\n  left: 0;\n  right: 0;\n  margin: 0 auto;\n  min-width: 800px;\n  width: 40vw;\n  height: 50vh;\n  z-index: 101;\n`;\n\nconst MovieCover = styled.div<{ backgroundImageUrl: string }>`\n  width: 100%;\n  height: 50vh;\n  background-image: linear-gradient(rgba(0, 0, 0, 0), rgba(0, 0, 0, 1)),\n    url(${(props) => props.backgroundImageUrl});\n  background-size: cover;\n  background-position: center center;\n  border-radius: 20px;\n  overflow: hidden;\n`;\n\nconst MovieDetailContainer = styled.div`\n  position: relative;\n  top: -100px;\n  padding: 20px;\n`;\n\nconst MovieTitle = styled.h3`\n  font-size: 60px;\n  margin-bottom: 10px;\n`;\n\nconst MovieOverview = styled.p`\n  line-height: 1.5;\n  color: ${(props) => props.theme.white.darker};\n`;\n\nconst SliderWrapper = styled.div`\n  padding-top: 100px;\n  width: 100%;\n`;\n\nexport default function Search() {\n  const location = useLocation();\n  const keyword = new URLSearchParams(location.search).get('keyword') ?? '';\n\n  const { data: searchResults, isLoading } = useQuery<ISearchResults>(\n    ['movie', 'now_playing'],\n    () => fetchSearchResults(keyword)\n  );\n\n  const movies = (searchResults?.results.filter(\n    (r) => r.media_type === SearchResultMediaType.MOVIE\n  ) ?? []) as unknown as IMovie[];\n\n  const tvShows = (searchResults?.results.filter(\n    (r) => r.media_type === SearchResultMediaType.TV\n  ) ?? []) as unknown as ITVShow[];\n\n  const history = useHistory();\n\n  const handleClickMovie = (movieId: number) => {\n    history.push(`/movie/${movieId}`);\n  };\n\n  const handleClickTVShow = (tvShowId: number) => {\n    history.push(`/tv_show/${tvShowId}`);\n  };\n\n  const { scrollY } = useViewportScroll();\n  const handleClickOverlay = () => history.push(`/search?keyword=${keyword}`);\n\n  return (\n    <Wrapper>\n      {isLoading ? (\n        <Loader></Loader>\n      ) : (\n        <div\n          style={{\n            position: 'relative',\n            backgroundColor: 'rgba(0,0,0,1)',\n            width: '100%',\n            height: '100%',\n          }}\n        >\n          <SliderWrapper>\n            <MovieSlider\n              title={'MOVIES'}\n              movies={movies}\n              pageOffset={sliderOffset}\n              onClickMovie={handleClickMovie}\n            />\n            <MovieSlider\n              title={'TV SHOWS'}\n              movies={tvShows}\n              pageOffset={sliderOffset}\n              onClickMovie={handleClickTVShow}\n            />\n          </SliderWrapper>\n        </div>\n      )}\n    </Wrapper>\n  );\n}\n","import { AnimatePresence, motion, useViewportScroll } from 'framer-motion';\nimport { useQuery } from 'react-query';\nimport { useHistory, useRouteMatch } from 'react-router-dom';\nimport styled from 'styled-components';\nimport {\n  fetchTVShowsAiringToday,\n  fetchTVShowsLatest,\n  fetchTVShowsPopular,\n  fetchTVShowsTopRated,\n  ITVShows,\n} from '../api';\nimport MovieSlider from '../Components/MovieSlider';\nimport { makeMovieImageUrl } from '../utils';\n\nconst sliderOffset = Math.floor(window.innerWidth / 300);\n\n/* styled components */\nconst Wrapper = styled.div`\n  width: 100vw;\n  height: 200vh;\n  background: linear-gradient(135deg, cyan, lightgreen);\n`;\n\nconst Loader = styled.div``;\nconst Banner = styled.div<{ fileNameWithExtension: string }>`\n  height: 100vh;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  background-image: linear-gradient(rgba(0, 0, 0, 0), rgba(0, 0, 0, 1)),\n    url(${(props) => makeMovieImageUrl(props.fileNameWithExtension)});\n  background-size: cover;\n  padding: 40px;\n`;\n\nconst Title = styled.h2`\n  font-size: 58px;\n  margin-bottom: 10px;\n  font-weight: bold;\n`;\n\nconst Overview = styled.p`\n  font-size: 18px;\n  width: 70%;\n`;\n\nconst Overlay = styled(motion.div)`\n  position: fixed;\n  top: 0;\n  width: 100%;\n  height: 100%;\n  background-color: rgba(0, 0, 0, 0.7);\n  opacity: 0;\n`;\n\nconst MovieDetailModal = styled(motion.div)`\n  position: absolute;\n  left: 0;\n  right: 0;\n  margin: 0 auto;\n  min-width: 800px;\n  width: 40vw;\n  height: 50vh;\n  z-index: 101;\n`;\n\nconst MovieCover = styled.div<{ backgroundImageUrl: string }>`\n  width: 100%;\n  height: 50vh;\n  background-image: linear-gradient(rgba(0, 0, 0, 0), rgba(0, 0, 0, 1)),\n    url(${(props) => props.backgroundImageUrl});\n  background-size: cover;\n  background-position: center center;\n  border-radius: 20px;\n  overflow: hidden;\n`;\n\nconst MovieDetailContainer = styled.div`\n  position: relative;\n  top: -100px;\n  padding: 20px;\n`;\n\nconst MovieTitle = styled.h3`\n  font-size: 60px;\n  margin-bottom: 10px;\n`;\n\nconst MovieOverview = styled.p`\n  line-height: 1.5;\n  color: ${(props) => props.theme.white.darker};\n`;\n\nconst SliderWrapper = styled.div`\n  position: absolute;\n  width: 100%;\n  height: 100vh;\n  bottom: 200px;\n`;\n\nexport default function TVShows() {\n  const history = useHistory();\n  const matchesTVShowId =\n    useRouteMatch<{ tvShowId: string }>('/tv_show/:tvShowId');\n  const matchedTVShowId = matchesTVShowId?.params.tvShowId;\n\n  const { data: tvShowsAiringToday, isLoading: isLoadingTVShowsAiringToday } =\n    useQuery<ITVShows>(['tv_show', 'airing_today'], fetchTVShowsAiringToday);\n  const { data: tvShowsLatest, isLoading: isLoadingTVShowsLatest } =\n    useQuery<ITVShows>(['tv_show', 'latest'], fetchTVShowsLatest);\n  const { data: tvShowsPopular, isLoading: isLoadingTVShowsPopular } =\n    useQuery<ITVShows>(['tv_show', 'popular'], fetchTVShowsPopular);\n  const { data: tvShowsTopRated, isLoading: isLoadingTVShowsTopRated } =\n    useQuery<ITVShows>(['tv_show', 'top_rated'], fetchTVShowsTopRated);\n  const [tvShowOfBanner, ...tvShowsOfSlider] =\n    tvShowsAiringToday?.results ?? [];\n\n  const isLoading =\n    isLoadingTVShowsAiringToday ||\n    isLoadingTVShowsLatest ||\n    isLoadingTVShowsPopular ||\n    isLoadingTVShowsTopRated;\n\n  const handleClickTVShow = (tvShowId: number) => {\n    history.push(`/tv_show/${tvShowId}`);\n  };\n\n  const { scrollY } = useViewportScroll();\n  const handleClickOverlay = () => history.push('/tv_show');\n\n  const clickedTVShow =\n    matchedTVShowId &&\n    tvShowsOfSlider.find((tvShow) => tvShow.id === +matchedTVShowId);\n\n  console.log(tvShowsAiringToday);\n\n  return (\n    <Wrapper>\n      {isLoading ? (\n        <Loader></Loader>\n      ) : (\n        <div\n          style={{\n            position: 'relative',\n            backgroundColor: 'rgba(0,0,0,1)',\n            width: '100%',\n            height: '100%',\n          }}\n        >\n          <Banner fileNameWithExtension={tvShowOfBanner?.backdrop_path ?? ''}>\n            <Title>{tvShowOfBanner?.name ?? ''}</Title>\n            <Overview>{tvShowOfBanner?.overview ?? ''}</Overview>\n          </Banner>\n          <SliderWrapper>\n            <MovieSlider\n              title={'NOW PLAYING'}\n              movies={tvShowsOfSlider}\n              pageOffset={sliderOffset}\n              onClickMovie={handleClickTVShow}\n            />\n            <MovieSlider\n              title={'LATEST'}\n              movies={tvShowsLatest?.results ?? []}\n              pageOffset={sliderOffset}\n              onClickMovie={handleClickTVShow}\n            />\n            <MovieSlider\n              title={'POPULAR'}\n              movies={tvShowsPopular?.results ?? []}\n              pageOffset={sliderOffset}\n              onClickMovie={handleClickTVShow}\n            />\n            <MovieSlider\n              title={'TOP RATED'}\n              movies={tvShowsTopRated?.results ?? []}\n              pageOffset={sliderOffset}\n              onClickMovie={handleClickTVShow}\n            />\n          </SliderWrapper>\n          <AnimatePresence>\n            {matchesTVShowId ? (\n              <>\n                <Overlay\n                  onClick={handleClickOverlay}\n                  animate={{ opacity: 1 }}\n                  exit={{ opacity: 0 }}\n                />\n                <MovieDetailModal\n                  style={{ top: scrollY.get() + 100 }}\n                  layoutId={matchesTVShowId?.params.tvShowId}\n                >\n                  {clickedTVShow ? (\n                    <>\n                      <MovieCover\n                        backgroundImageUrl={makeMovieImageUrl(\n                          clickedTVShow.backdrop_path,\n                          500\n                        )}\n                      />\n                      <MovieDetailContainer>\n                        <MovieTitle>{clickedTVShow.name}</MovieTitle>\n                        <MovieOverview>{clickedTVShow.overview}</MovieOverview>\n                      </MovieDetailContainer>\n                    </>\n                  ) : null}\n                </MovieDetailModal>\n              </>\n            ) : null}\n          </AnimatePresence>\n        </div>\n      )}\n    </Wrapper>\n  );\n}\n","import { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport Header from './Components/Header';\nimport Home from './Routes/Home';\nimport Search from './Routes/Search';\nimport TVShows from './Routes/TVShows';\n\nfunction App() {\n  return (\n    <Router>\n      <Header />\n      <Switch>\n        <Route path={'/search'}>\n          <Search />\n        </Route>\n        <Route path={['/tv_show', '/tv_show/:tvShowId']}>\n          <TVShows />\n        </Route>\n        <Route path={['/', '/movie/:movieId']}>\n          <Home />\n        </Route>\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { QueryClient, QueryClientProvider } from 'react-query';\nimport { RecoilRoot } from 'recoil';\nimport { createGlobalStyle, ThemeProvider } from 'styled-components';\nimport App from './App';\nimport { theme } from './theme';\n\nconst GlobalStyle = createGlobalStyle`\n  @import url('https://fonts.googleapis.com/css2?family=Ubuntu&display=swap');\n  html, body, div, span, applet, object, iframe,\n  h1, h2, h3, h4, h5, h6, p, blockquote, pre,\n  a, abbr, acronym, address, big, cite, code,\n  del, dfn, em, img, ins, kbd, q, s, samp,\n  small, strike, strong, sub, sup, tt, var,\n  b, u, i, center,\n  dl, dt, dd, ol, ul, li,\n  fieldset, form, label, legend,\n  table, caption, tbody, tfoot, thead, tr, th, td,\n  article, aside, canvas, details, embed, \n  figure, figcaption, footer, header, hgroup, \n  menu, nav, output, ruby, section, summary,\n  time, mark, audio, video {\n    margin: 0;\n    padding: 0;\n    border: 0;\n    font-size: 100%;\n    font: inherit;\n    vertical-align: baseline;\n  }\n  /* HTML5 display-role reset for older browsers */\n  article, aside, details, figcaption, figure, \n  footer, header, hgroup, menu, nav, section {\n    display: block;\n  }\n  body {\n    font-family: 'Ubuntu', sans-serif;\n    color: ${(props) => props.theme.white.lighter};\n    line-height: 1.2;\n  }\n  ol, ul {\n    list-style: none;\n  }\n  blockquote, q {\n    quotes: none;\n  }\n  blockquote:before, blockquote:after,\n  q:before, q:after {\n    content: '';\n    content: none;\n  }\n  table {\n    border-collapse: collapse;\n    border-spacing: 0;\n  }\n  a {\n    text-decoration: none;\n    color: inherit\n  }\n  * {\n    box-sizing: border-box;\n  }\n`;\n\nconst client = new QueryClient();\n\nReactDOM.render(\n  <React.StrictMode>\n    <RecoilRoot>\n      <QueryClientProvider client={client}>\n        <ThemeProvider theme={theme}>\n          <GlobalStyle />\n          <App />\n        </ThemeProvider>\n      </QueryClientProvider>\n    </RecoilRoot>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n","import { DefaultTheme } from 'styled-components';\n\nexport const theme: DefaultTheme = {\n  red: '#E51013',\n  black: {\n    veryDark: '#141414',\n    darker: '#181818',\n    lighter: '#2F2F2F',\n  },\n  white: {\n    lighter: '#fff',\n    darker: '#e5e5e5',\n  },\n};\n"],"sourceRoot":""}